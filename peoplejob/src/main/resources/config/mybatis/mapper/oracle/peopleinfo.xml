<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.peopleinfo">
  
	<select id="selectPeoplew" parameterType="map" resultType="map">
	select * from
			(
			    select A.*, rownum as RNUM 
			    from
			    (
					select * from
					(
						select * from resume_view 
						<where>
						<if test="opencheck='Y'">
							<if test='detailCk="Y"'>
								<if test="hopeworkingVo.localCode!=null and hopeworkingVo.localCode!='구/군' ">
									and local_code like	'%' || #{hopeworkingVo.localCode} || '%'
								</if>
								<if test="hopeworkingVo.btypeCode3!=null and hopeworkingVo.btypeCode3!='3차 업종'">
									and btype_code3 like '%' || #{hopeworkingVo.btypeCode3} || '%'
								</if>
								<if test="hopeworkingVo.thirdCode!=null and hopeworkingVo.thirdCode!='3차 직종'">
									and third_code like '%' || #{hopeworkingVo.thirdCode} || '%'
								</if>
								<if test="ages!=null">
									<foreach collection="ages" item="age">
										<if test='age!="5"'>
											or birth/10 >= #{age} and birth/10 <![CDATA[ < ]]> #{age}+1
										</if>
										<if test='age=="5"'>
		   									or birth/10 >= ${age} 
		   								</if>
									</foreach>
								</if>
								<if test="gender!=null">
									and membergender in 
										<foreach collection="gender" close=")" item="gen" open="(" separator=",">
											#{gen}
										</foreach> 
								</if>
								<if test="currer!=null">
								and
									<foreach collection="currer" item="cur" separator="or">
										<if test='cur=="신입"'> workterm is null</if>
										<if test='cur=="1~3년"'> workterm>= 1 and workterm <![CDATA[ < ]]>=1+2 </if>
										<if test='cur=="3~5년"'> workterm>= 3 and workterm <![CDATA[ <= ]]>3+2 </if>
										<if test='cur=="5~10년"'> workterm>= 5 and workterm <![CDATA[ <= ]]>10 </if>
										<if test='cur=="10년이상"'> workterm>= 10</if>
									</foreach>
								</if>
								<if test="academic!=null">
									and graduatetype in
										<foreach collection="academic" open="(" close=")" separator="," item="aca">
											#{aca}
										</foreach>
								</if>
								</if>
								</if>
						</where>
			   		) 
			   		<where>
				   		<if test="searchKeyword!='' and searchKeyword!=null">
				   			<if test='searchCondition=="all"'>
					   			memberid like '%' || #{searchKeyword} || '%' or
								membername like '%' || #{searchKeyword} || '%' or
								resumetitle  like '%' || #{searchKeyword} || '%' or
								address  like '%' || #{searchKeyword} || '%' or
								addressdetail   like '%' || #{searchKeyword} || '%' or
								introduce  like '%' || #{searchKeyword} || '%' or
								schoolname like '%' || #{searchKeyword} || '%' or
								major like '%' || #{searchKeyword} || '%' 
				   			</if>
				   			<if test='searchCondition=="id"'>
				   				and memberid like '%' || #{searchKeyword} || '%'
				   			</if>
				   			<if test='searchCondition=="name"'>
				   				and membername like '%' || #{searchKeyword} || '%'
				   			</if>
				   			<if test='searchCondition=="resume"'>
				   				resumetitle  like '%' || #{searchKeyword} || '%' or
								address  like '%' || #{searchKeyword} || '%' or
								addressdetail   like '%' || #{searchKeyword} || '%' or
								introduce  like '%' || #{searchKeyword} || '%' or
								schoolname like '%' || #{searchKeyword} || '%' or
								major like '%' || #{searchKeyword} || '%' 
				   			</if>
				   		</if>
			   		</where>
				)A
			)
		where RNUM>#{firstRecordIndex}  
		and RNUM <![CDATA[<]]>=#{firstRecordIndex} + #{recordCountPerPage}
	</select>
	<!-- <select id="selectPeoplew" parameterType="map" resultType="resumeVo">
	select *
		from
		(
		    select A.*, rownum as RNUM 
		    from
		    (
		        select * from resume_viewMain where opencheck='Y'
		    
		    <if test="term != null and term !=''">
				and term IN 
				<foreach collection="term" item="term1" 
					index="index" open="(" close=")" separator=",">
				#{term1}
				</foreach>
				</if>
				<if test="age != null and age !='' ">
				and age in
			<foreach collection="age" item="age1" index="index" open="(" close=")" separator=",">
			#{age1}
			</foreach>
			</if>
			<if test="graduatetype != null">
	and graduatetype in
	<foreach collection="graduatetype" item="graduatetype1" index="index" open="(" close=")" separator=",">
	#{graduatetype1}
	</foreach>
	</if>
	<if test="localCode != null">
	and local_code in
	<foreach collection="localCode" item="localCode1" index="index" open="(" close=")" separator=",">
	#{localCode1}
	</foreach>
	</if>
	<if test="localCode2 != null">
	and local_code2 in
	<foreach collection="localCode2" item="localCode2" index="index" open="(" close=")" separator=",">
	#{localCode2}
	</foreach>
	</if>
	<if test="workcheck != null">
	and workcheck in
	<foreach collection="workcheck" item="workcheck" index="index" open="(" close=")" separator=",">
	#{workcheck}
	</foreach>
	</if>
	
	<if test="membergender != null">
	and membergender in
	<foreach collection="membergender" item="membergender" index="index" open="(" close=")" separator=",">
	#{membergender}
	</foreach>
	</if>
	<if test="btypeCode1 != null">
	and btype_code1 in
	<foreach collection="btypeCode1" item="btypeCode1" index="index" open="(" close=")" separator=",">
	#{btypeCode1}
	</foreach>
	</if>
	<if test="btypeCode2 != null">
	and btype_code2 in
	<foreach collection="btypeCode2" item="btypeCode2" index="index" open="(" close=")" separator=",">
	#{btypeCode2}
	</foreach>
	</if>
	<if test="btypeCode3 != null">
	and btype_code3 in
	<foreach collection="btypeCode3" item="btypeCode3" index="index" open="(" close=")" separator=",">
	#{btypeCode3}
	</foreach>
	</if>
	<if test="firstCode != null">
	and first_code in
	<foreach collection="firstCode" item="firstCode" index="index" open="(" close=")" separator=",">
	#{firstCode}
	</foreach>
	</if>
	<if test="secondCode != null">
	and	second_code in
	<foreach collection="secondCode" item="secondCode" index="index" open="(" close=")" separator=",">
	#{secondCode}
	</foreach>
	</if>
	<if test="thirdCode != null">
	and third_code in
	<foreach collection="thirdCode" item="thirdCode" index="index" open="(" close=")" separator=",">
	#{thirdCode}
	</foreach>
	</if>
	)A
	)
	<where>
		<![CDATA[ RNUM>#{firstRecordIndex}  
		and RNUM<=#{firstRecordIndex} + #{recordCountPerPage}]]>
		</where>
	</select> -->
	<select id="selectCareer" parameterType="map" resultType="resumeVo">	
	select workterm,workterm2,trunc(months_between(workterm2,workterm)/12,0) as "term" from career
	<if test="term != 0">
				and term IN 
				<foreach collection="term" item="term" 
					index="index" open="(" close=")" separator=",">
				#{term}
				</foreach>
				</if>	
	</select>
	
	<select id="selectAge" parameterType="map" resultType="resumeVo">
	SELECT NVL(TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(birth, 1, 4), 'YYYY'))/12), 0) AS AGE 
	FROM   member
	<if test="age != 0">
	and age in
	<foreach collection="age" item="age" index="index" open="(" close=")" separator=",">
	#{age}
	</foreach>
	</if>
	
	</select>
	
	<select id="selectGraduatetype" parameterType="map" resultType="resumeVo">
	select graduatetype from education
	<if test="graduatetype != null">
	and graduatetype in
	<foreach collection="graduatetype" item="graduatetype" index="index" open="(" close=")" separator=",">
	#{graduatetype}
	</foreach>
	</if>
	</select>
	
	<select id="selectResumeView" parameterType="int" resultType="resumeVo">
	select * from resume_viewMain where resume_code=#{resumeCode}
	
	</select>
	
	
	<select id="selectSido" parameterType="map" resultType="resumeVo">
	select sido from location
	<if test="sido != null">
	and sido in
	<foreach collection="sido" item="sido" index="index" open="(" close=")" separator=",">
	#{sido}
	</foreach>
	</if>
	
	</select>
	<select id="selectBtype" parameterType="map" resultType="resumeVo">
	select * from btype1 b1, btype2 b2, btype3 b3
	where b1.BTYPE_CODE1=b2.btype_code1 and b2.BTYPE_CODE2 = b3.BTYPE_CODE2
	<if test="btypename1 != null">
	and btypename1 in
	<foreach collection="btypename1" item="btypename1" index="index" open="(" close=")" separator=",">
	#{btypename1}
	</foreach>
	</if>
	<if test="btypename2 != null">
	and btypename2 in
	<foreach collection="btypename2" item="btypename2" index="index" open="(" close=")" separator=",">
	#{btypename2}
	</foreach>
	</if>
	<if test="btypename3 != null">
	and btypename3 in
	<foreach collection="btypename3" item="btypename3" index="index" open="(" close=")" separator=",">
	#{btypename3}
	</foreach>
	</if>
	
	</select>
	<select id="selectJobtype" parameterType="map" resultType="resumeVo">
	select * from first f, second s, third t
	where f.first_code=s.first_code and s.second_code = t.second_code
	<if test="firstname != null">
	and firstname in
	<foreach collection="firstname" item="firstname" index="index" open="(" close=")" separator=",">
	#{firstname}
	</foreach>
	</if>
	<if test="secondname != null">
	and secondname in
	<foreach collection="secondname" item="secondname" index="index" open="(" close=")" separator=",">
	#{secondname}
	</foreach>
	</if>
	<if test="thirdname != null">
	and thirdname in
	<foreach collection="thirdname" item="thirdname" index="index" open="(" close=")" separator=",">
	#{thirdname}
	</foreach>
	</if>
	
	</select>
	
	 <select id="selectTotalCountCareer" parameterType="map" resultType="int">
	select count(*),trunc(months_between(workterm2,workterm)/12,0) as term from career 
	<if test="term != null">
				and term IN 
				<foreach collection="term" item="term" 
					index="index" open="(" close=")" separator=",">
				#{term}
				</foreach>
				</if>
				group by term
	</select>
	<select id="selectTotalCountAge" parameterType="map" resultType="int">
	select count(*),NVL(TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(birth, 1, 4), 'YYYY'))/12), 0) AS AGE from member 
	<if test="age != null">
				and age IN 
				<foreach collection="age" item="age" 
					index="index" open="(" close=")" separator=",">
				#{age}
				</foreach>
				</if>
				group by age
	</select>
	<select id="selectTotalCountGraduatetype" parameterType="map" resultType="int">
	select count(*) from education 
	<if test="graduatetype != null">
				and graduatetype IN 
				<foreach collection="graduatetype" item="graduatetype" 
					index="index" open="(" close=")" separator=",">
				#{graduatetype}
				</foreach>
				</if>
	</select>
	<select id="selectTotalCountSido" parameterType="map" resultType="int">
	select count(*) from location 
	<if test="sido != null">
				and sido IN 
				<foreach collection="sido" item="sido" 
					index="index" open="(" close=")" separator=",">
				#{sido}
				</foreach>
				</if>
	</select>
	<select id="selectTotalCountBtype" parameterType="map" resultType="int">
	select count(*) from btype1 b1, btype2 b2, btype3 b3
	where b1.BTYPE_CODE1=b2.btype_code1 and b2.BTYPE_CODE2 = b3.BTYPE_CODE2
	<if test="btypename1 != null">
	and btypename1 in
	<foreach collection="btypename1" item="btypename1" index="index" open="(" close=")" separator=",">
	#{btypename1}
	</foreach>
	</if>
	<if test="btypename2 != null">
	and btypename2 in
	<foreach collection="btypename2" item="btypename2" index="index" open="(" close=")" separator=",">
	#{btypename2}
	</foreach>
	</if>
	<if test="btypename3 != null">
	and btypename3 in
	<foreach collection="btypename3" item="btypename3" index="index" open="(" close=")" separator=",">
	#{btypename3}
	</foreach>
	</if>
	</select>
	<select id="selectTotalCountJobtype" parameterType="map" resultType="int">
	select count(*) from first f, second s, third t
	where f.first_code=s.first_code and s.second_code = t.second_code
	<if test="firstname != null">
	and firstname in
	<foreach collection="firstname" item="firstname" index="index" open="(" close=")" separator=",">
	#{firstname}
	</foreach>
	</if>
	<if test="secondname != null">
	and secondname in
	<foreach collection="secondname" item="secondname" index="index" open="(" close=")" separator=",">
	#{secondname}
	</foreach>
	</if>
	<if test="thirdname != null">
	and thirdname in
	<foreach collection="thirdname" item="thirdname" index="index" open="(" close=")" separator=",">
	#{thirdname}
	</foreach>
	</if>
	</select> 
	
	
	<!-- <select id="selectTotalCountPeople" parameterType="map" resultType="int">
		select count(*) from resume_viewMain where opencheck='Y'
		    
		      <if test="term != null">
				and term IN 
				<foreach collection="term" item="term" 
					index="index" open="(" close=")" separator=",">
				#{term}
				</foreach>
				</if>
				<if test="age != null">
				and age in
			<foreach collection="age" item="age" index="index" open="(" close=")" separator=",">
			#{age}
			</foreach>
			</if>
			<if test="graduatetype != null">
	and graduatetype in
	<foreach collection="graduatetype" item="graduatetype" index="index" open="(" close=")" separator=",">
	#{graduatetype}
	</foreach>
	</if>
	<if test="localCode != null">
	and local_code in
	<foreach collection="localCode" item="localCode" index="index" open="(" close=")" separator=",">
	#{localCode}
	</foreach>
	</if>
	<if test="localCode2 != null">
	and local_code2 in
	<foreach collection="localCode2" item="localCode2" index="index" open="(" close=")" separator=",">
	#{localCode2}
	</foreach>
	</if>
	
	<if test="workcheck != null">
	and workcheck in
	<foreach collection="workcheck" item="workcheck" index="index" open="(" close=")" separator=",">
	#{workcheck}
	</foreach>
	</if>
	
	<if test="membergender != null">
	and membergender in
	<foreach collection="membergender" item="membergender" index="index" open="(" close=")" separator=",">
	#{membergender}
	</foreach>
	</if>
	<if test="btypeCode1 != null">
	and btype_code1 in
	<foreach collection="btypeCode1" item="btypeCode1" index="index" open="(" close=")" separator=",">
	#{btypeCode1}
	</foreach>
	</if>
	<if test="btypeCode2 != null">
	and btype_code2 in
	<foreach collection="btypeCode2" item="btypeCode2" index="index" open="(" close=")" separator=",">
	#{btypeCode2}
	</foreach>
	</if>
	<if test="btypeCode3 != null">
	and btype_code3 in
	<foreach collection="btypeCode3" item="btypeCode3" index="index" open="(" close=")" separator=",">
	#{btypeCode3}
	</foreach>
	</if>
	<if test="firstCode != null">
	and first_code in
	<foreach collection="firstCode" item="firstCode" index="index" open="(" close=")" separator=",">
	#{firstCode}
	</foreach>
	</if>
	<if test="secondCode != null">
	and second_code in
	<foreach collection="secondCode" item="secondCode" index="index" open="(" close=")" separator=",">
	#{secondCode}
	</foreach>
	</if>
	<if test="thirdCode != null">
	and third_code in
	<foreach collection="thirdCode" item="thirdCode" index="index" open="(" close=")" separator=",">
	#{thirdCode}
	</foreach>
	</if>
		    
		    order by resumeregdate desc
	
	
	</select>
	 -->
	 
	 <select id="selectTotalCountPeople" parameterType="map" resultType="int">
	select count(*) from
			(
			    select A.*, rownum as RNUM 
			    from
			    (
					select * from
					(
						select * from resume_view	
						<where>
						<if test="opencheck='Y'">
							<if test='detailCk="Y"'>
								<if test="hopeworkingVo.localCode!=null and hopeworkingVo.localCode!='구/군'  ">
									and local_code like	'%' || #{hopeworkingVo.localCode} || '%'
								</if>
								<if test=" hopeworkingVo.btypeCode3!=null and hopeworkingVo.btypeCode3!='3차 업종'">
									and btype_code3 like '%' || #{hopeworkingVo.btypeCode3} || '%'
								</if>
								<if test="hopeworkingVo.thirdCode!=null and hopeworkingVo.thirdCode!='3차 직종'">
									and third_code like '%' || #{hopeworkingVo.thirdCode} || '%'
								</if>
								<if test="ages!=null">
									<foreach collection="ages" item="age">
										<if test='age!="5"'>
											or birth/10 >= #{age} and birth/10 <![CDATA[ < ]]> #{age}+1
										</if>
										<if test='age=="5"'>
		   									or birth/10 >= ${age} 
		   								</if>
									</foreach>
								</if>
								<if test="gender!=null">
									and membergender in 
										<foreach collection="gender" close=")" item="gen" open="(" separator=",">
											#{gen}
										</foreach> 
								</if>
								<if test="currer!=null">
								and
									<foreach collection="currer" item="cur" separator="or">
										<if test='cur=="신입"'> workterm is null</if>
										<if test='cur=="1~3년"'> workterm>= 1 and workterm <![CDATA[ < ]]>=1+2 </if>
										<if test='cur=="3~5년"'> workterm>= 3 and workterm <![CDATA[ <= ]]>3+2 </if>
										<if test='cur=="5~10년"'> workterm>= 5 and workterm <![CDATA[ <= ]]>10 </if>
										<if test='cur=="10년이상"'> workterm>= 10</if>
									</foreach>
								</if>
								<if test="academic!=null">
									and graduatetype in
										<foreach collection="academic" open="(" close=")" separator="," item="aca">
											#{aca}
										</foreach>
								</if>
								</if>
								</if>
						</where>
			   		) 
			   		<where>
				   		<if test="searchKeyword!='' and searchKeyword!=null">
				   			<if test='searchCondition=="all"'>
					   			memberid like '%' || #{searchKeyword} || '%' or
								membername like '%' || #{searchKeyword} || '%' or
								resumetitle  like '%' || #{searchKeyword} || '%' or
								address  like '%' || #{searchKeyword} || '%' or
								addressdetail   like '%' || #{searchKeyword} || '%' or
								introduce  like '%' || #{searchKeyword} || '%' or
								schoolname like '%' || #{searchKeyword} || '%' or
								major like '%' || #{searchKeyword} || '%' 
				   			</if>
				   			<if test='searchCondition=="id"'>
				   				and memberid like '%' || #{searchKeyword} || '%'
				   			</if>
				   			<if test='searchCondition=="name"'>
				   				and membername like '%' || #{searchKeyword} || '%'
				   			</if>
				   			<if test='searchCondition=="resume"'>
				   				resumetitle  like '%' || #{searchKeyword} || '%' or
								address  like '%' || #{searchKeyword} || '%' or
								addressdetail   like '%' || #{searchKeyword} || '%' or
								introduce  like '%' || #{searchKeyword} || '%' or
								schoolname like '%' || #{searchKeyword} || '%' or
								major like '%' || #{searchKeyword} || '%' 
				   			</if>
				   		</if>
			   		</where>
				)A
			)
	</select>
	
	<select id="selectFirst" resultType="FirstOccupationVO">
		select * from first
	</select>
	
	<select id="selectSecond" resultType="secondOccupationVo" parameterType="int">
		select * from second
		where first_code=#{firstCode}	
	</select>
	
	<select id="selectThird" resultType="thirdOccupationVo" parameterType="int">
		select * from third
		where second_code=#{secondCode}
	</select>

   <select id="selectLocation" resultType="LocationVO">
      select sido, local_code2 from 
      (
         select local_code, sido, trunc(local_code2/1000) as local_code2 from location
      )
      group by sido, local_code2
      order by local_code2
   </select>
   
   <select id="selectLocation2" parameterType="int" resultType="map">
      select * from location2 
      <![CDATA[where local_code2>=#{code}*1000 and local_code2<(#{code}+1)*1000]]>
   </select>
   <select id="selectBtype1" resultType="map">
      select * from btype1
   </select>
   
   <select id="selectBtype2" resultType="map" parameterType="int">
      select * from btype2
      where btype_code1=#{code}
   </select>   

   <select id="selectBtype3" resultType="map" parameterType="int">
      select * from btype3
      where btype_code2=#{code}
   </select>      
   
   
</mapper>








