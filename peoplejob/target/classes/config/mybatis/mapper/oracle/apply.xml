<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.apply">
	<insert id="insertapply" parameterType="TableaplyVO" >
		<selectKey resultType="int" order="BEFORE" keyProperty="applyCode">
			select apply_seq.nextval from dual
		</selectKey>
		insert into apply(apply_code,applydate,opencheck,member_code,jobopening,resume_code) 
		values(#{applyCode},sysdate,'N',#{memberCode},#{jobopening},#{resumeCode})
	</insert>
	<select id="selectapply" parameterType="map" resultType="tableaplyVO">
	select *
		from
		(
		    select A.*, rownum as RNUM 
		    from
		    (
			select * from apply where member_code=#{memberCode}
			order by applydate desc
			)A
		) 
		<where>
		<![CDATA[ RNUM>#{firstRecordIndex}  and
		RNUM<=#{firstRecordIndex} + #{recordCountPerPage}]]>
		</where>
	</select>
	<select id="selectapplyCount" parameterType="map" resultType="int">
		select count(*) from apply where member_code=#{memberCode}
	</select>
	<select id="dupapply" parameterType="map" resultType="int">
		select count(*) from apply where jobopening=#{jobopening} and member_code=#{memberCode}
	</select>
	<delete id="deleteapply" parameterType="map">
		delete apply
		where apply_code in
		<foreach collection="applyCode1" item="applyCode" 
					index="index" open="(" close=")" separator=",">
				#{applyCode}
		</foreach>
	</delete>
	<select id="selectapplyComp" parameterType="map" resultType="tableaplyVO">
	select *
		from
		(
		    select A.*, rownum as RNUM 
		    from
		    (
			select * from apply where jobopening in 
			
			<foreach collection="jobopening" item="jobopening" 
					index="index" open="(" close=")" separator=",">
				#{jobopening}
			</foreach>
			order by applydate desc
			)A
		) 
		<where>
		<![CDATA[ RNUM>#{firstRecordIndex}  and
		RNUM<=#{firstRecordIndex} + #{recordCountPerPage}]]>
		</where>
	</select>
	<select id="selectapplyCompcount" parameterType="map" resultType="int">
		select count(*) from apply where jobopening in 
			<foreach collection="jobopening" item="jobopening" 
					index="index" open="(" close=")" separator=",">
				#{jobopening}
			</foreach>
	</select>
	<select id="cntpay" parameterType="int" resultType="int">
		select count(*) from payment where member_code=#{memberCode}
	</select>
	<update id="opencheckY" parameterType="map" >
	update apply set opencheck='Y' where member_code=#{memberCode} and jobopening=#{jobopening}
	</update>
	
	<select id="cntresume" parameterType="int" resultType="int">
		select count(*) from resume where member_code=#{memberCode}
	</select>
	
	<select id="selectresumebyid" parameterType="int" resultType="resumeVo">
		select * from resume where member_code=#{memberCode}
	</select>
	<select id="selectresumebyid2" parameterType="int" resultType="resumeVo">
		select * from resume where member_code=#{memberCode}
	</select>
	<select id="selectresumebyid3" parameterType="map" resultType="tableaplyVO">
		select * from apply where member_code=#{memberCode} and jobopening=#{jobopening}
	</select>
	<select id="applyCnt" parameterType="int" resultType="int">
		select count(*) from apply where jobopening=#{jobopening}
	</select>
			<select id="selectTotalCount" parameterType="searchVo" resultType="int" >

			select count(*) from apply a join member m
				on a.member_code = m.member_code
				join jobopening j
				on a.jobopening = j.jobopening
				<where>
							<if test="searchCondition!= null and searchCondition!=''
								and searchKeyword!= null and searchKeyword!=''">
								
								<if test='searchCondition=="all"'>
								 m.memberid like  '%' || #{searchKeyword} || '%' or
								 
								 m.membername like  '%' || #{searchKeyword} || '%' or
								 
								  j.jobtitle like  '%' || #{searchKeyword} || '%' 
								</if>
							<if test='searchCondition=="memberid"'>
									 m.memberid like  '%' || #{searchKeyword} || '%'
							</if>
							
							<if test='searchCondition=="membername"'>
									  m.membername like  '%' || #{searchKeyword} || '%'
							</if>
							<if test='searchCondition=="jobtitle"'>
									  j.jobtitle like  '%' || #{searchKeyword} || '%'
							</if>
							<if test="startDay!=null and startDay !='' and endDay!=null and endDay != ''">
								 <![CDATA[ or applydate >= #{startDay} and applydate <to_date(#{endDay})+1]]>
							</if>
					</if>				
			
				</where>

	</select>
	
	<select id="selectADapply" parameterType="map" resultType="map" >
	select* from
	(
		select A.*, rownum as RNUM from 
		(
			select apply_code,m.memberid,m.membername,j.jobtitle,opencheck,applydate
				from apply a join member m
				on a.member_code = m.member_code
				join jobopening j
				on a.jobopening = j.jobopening
				<where>
							<if test="searchVo.searchCondition!= null and searchVo.searchCondition!=''
								and searchVo.searchKeyword!= null and searchVo.searchKeyword!=''">
								
								<if test='searchVo.searchCondition=="all"'>
								 m.memberid like  '%' || #{searchVo.searchKeyword} || '%' or
								 
								 m.membername like  '%' || #{searchVo.searchKeyword} || '%' or
								 
								  j.jobtitle like  '%' || #{searchVo.searchKeyword} || '%' 
								</if>
							<if test='searchVo.searchCondition=="memberid"'>
									 m.memberid like  '%' || #{searchVo.searchKeyword} || '%'
							</if>
							
							<if test='searchVo.searchCondition=="membername"'>
									  m.membername like  '%' || #{searchVo.searchKeyword} || '%'
							</if>
							<if test='searchVo.searchCondition=="jobtitle"'>
									  j.jobtitle like  '%' || #{searchVo.searchKeyword} || '%'
							</if>
							<if test="startDay!=null and startDay !='' and endDay!=null and endDay != ''">
								 <![CDATA[ or applydate >= #{startDay} and applydate <to_date(#{endDay})+1]]>
							</if>
					</if>				
			
				</where>

			) A
		)
	<![CDATA[where RNUM>#{searchVo.firstRecordIndex}  
		and RNUM<=#{searchVo.firstRecordIndex} + #{searchVo.recordCountPerPage}]]> 
	</select>
	

	
</mapper>









